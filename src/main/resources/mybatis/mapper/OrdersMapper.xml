<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.fiveminutesmarket.order.repository.OrdersRepository">
    <resultMap id="ordersResultMap" type="kr.fiveminutesmarket.order.domain.Orders">
        <id property="orderId" column="order_id"  />
        <result property="totalPrice" column="total_price" />
        <result property="address" column="address" />
        <result property="payment" column="payment" />
        <result property="orderStatus" column="order_status" />
        <result property="message" column="message" />
        <result property="createdDate" column="created_date" />
        <result property="updatedDate" column="updated_date" />
        <result property="userId" column="user_id" />
        <collection property="orderProducts" ofType="kr.fiveminutesmarket.order.domain.OrderProduct">
            <constructor>
                <idArg column="order_product_id" javaType="Long"/>
                <arg column="product_name" javaType="String"/>
                <arg column="product_amount" javaType="Integer"/>
                <arg column="product_price" javaType="Integer"/>
                <arg column="order_id" javaType="Long"/>
            </constructor>
            <id property="orderProductId" column="order_product_id" />
            <result property="productName" column="product_name" />
            <association property="amount"  javaType="kr.fiveminutesmarket.order.domain.Amount" >
                <result property="amount"  column="product_amount" />
            </association>
            <association property="price"  javaType="kr.fiveminutesmarket.order.domain.Price" >
                <result property="price"  column="product_price" />
            </association>
        </collection>
    </resultMap>

    <!--  사용자 관점에서의 주문 리스트 조회  -->
    <select id="findAllByUserIdOrderByCreatedDate" resultMap="ordersResultMap">
        SELECT
            o.order_id AS order_id,
            o.total_price AS total_price,
            o.address AS address,
            o.payment AS payment,
            o.order_status AS order_status,
            o.message AS message,
            o.created_date AS created_date,
            o.updated_date AS updated_date,
            o.user_id AS user_id,
            op.order_product_id AS order_product_id,
            op.product_name AS product_name,
            op.amount AS product_amount,
            op.price AS product_price
        FROM `orders` o
            INNER JOIN order_product op
                ON o.order_id = op.order_id
        WHERE o.user_id = #{userId}
        LIMIT #{startIndex}, #{itemCount}
    </select>
</mapper>